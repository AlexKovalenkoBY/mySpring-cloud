version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  config-server:
    build: ./config-server
    ports:
      - "8888:8888"
    volumes:
      - ./config-repo:/config-repo
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS=file:/config-repo

  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888

  service-a:
    build: ./service-a
    ports:
      - "8081:8080"
    depends_on:
      - eureka-server
      - config-server
      - kafka
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_DEVTOOLS_RESTART_ENABLED=true # Включаем Spring DevTools
    volumes:
      - ./service-a/src:/app/src # Монтируем исходный код
      - ~/.m2:/root/.m2 # Кэш Maven для ускорения сборки
    command: mvn spring-boot:run # Запуск через Maven для hot-reload
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - config-server
      - kafka
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
  new-service:
      build: ./new-service
      ports:
        - "8083:8083"
      depends_on:
        - eureka-server
        - postgres  # Если использует БД